{
  "dct:title": "2020 Miami-Dade ACS 5 Year Estimates - Tract Level - DVMT",
  "dct:creator": ["Department of Commerce", "U.S. Census Bureau;;;;https://ror.org/01qn7cs15;ROR;https://ror.org/"],
  "dct:identifier": "https://www.census.gov/data/developers/data-sets/acs-5year.html",
  "dct:publisher": ["Department of Commerce", "U.S. Census Bureau"],
  "dct:rights": "Public Domain",
  "dct:license": "This Software was created by U.S. Government employees and therefore is not subject to copyright in the United States (17 U.S.C. \u00a7105). The United States/U.S.Department of Commerce (\u201cCommerce\u201d) reserve all rights to seek and obtain copyright protection in countries other than the United States. The United States/Commerce hereby grant to User a royalty-free, nonexclusive license to use, copy, and create derivative works of the Software outside of the United States.\n\nThe Software is provided to the User and those who may take by, through or under it, \u201cas is,\u201d without any warranty (whether express or implied) or representation whatsoever, including but not limited to any warranty of merchantability. The Software is taken hereunder without any right to support or to any improvements, extensions, or modifications, except as may be agreed to separately, in writing, by Commerce.\n\nUser, on behalf of itself and all others who take by, through or under it, hereby and forever waives, releases, and discharges the United States/Commerce and all its instrumentalities from any and all liabilities and obligations in connection with the use, application, sale or conveyance of the Software. User shall indemnify and hold harmless the United States/Commerce and its instrumentalities from all claims, liabilities, demands, damages, expenses, and losses arising from or in connection with User's use, application, sale or conveyance of the Software, including those who take by, through or under User whether or not User was directly involved. This provision will survive termination of this Agreement and will include any and all claims or liabilities arising under intellectual property rights, such as patents, copyrights, trademarks, and trade secrets. If User of software is an Executive Agency of the United States, this clause is not applicable.\n\nThe construction, validity, performance, and effect of this Agreement for all purposes will be governed by Federal law of the United States.\n\nUser agrees to make a good faith effort to use the Software in a way that does not cause damage, harm, or embarrassment to the United States/Commerce. The United States/Commerce expressly reserve all rights and remedies.",
  "dct:coverage": ["United States", "Florida"],
  "dct:relation": ["tl_2020_12_tract"],
  "dct:type": "API",
  "dct:issued": "2022-03-17T00:00:00Z",
  "dct:description": "A special collection of aggregated columns from the 2020 5-year ACS variables at the census tract level selected for use with the Displacement Vulnerability Mitigation Tool (DVMT). Please see the column metadata for the description of the columns.",
  "prov:qualifiedAttribution": "direct from source and aggregated according to custom specification, see ETL documentation",
  "dcat:keyword": ["Miami-Dade County", "Census", "ACS", "2020", "5-Year Estimates", "Tract", "Census Tract", "Demographic", "Housing", "Property", "Population", "DVMT"],
  "dct:language": "en",
  "adms:representationTechnique": "vector",
  "locn:geometry": "multipolygon",
  "prov:action": "#########\n# GDSC ETL is performed in two steps: shell script to ETL data into postgres\n# and then additional transformations with SQL in postGIS (if needed).\n####\n\n#########\n# Step 1 - bash script (pseudo code)\n####\n\n# create directory structure and move into it\nmkdir -p /data/mdc_2020_acs_5yr_tract_dvmt/{download,etl} && cd /data/mdc_2020_acs_5yr_tract_dvmt\n\n# set update flag based on last update and update frequency\ndo_update=0 if date() < last_update + update_frequency else do_update = 1\n\n# download specific variables from the census API, reformat census json to csv,\n# and load as individual tables into postGIS with ogr2ogr.\nif do_update = 1 then\n  wget -O download/total_population.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/total_population.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_population.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_population\n\nif do_update = 1 then\n  wget -O download/persons_4_years_old_and_younger.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001_003E%2CB01001_027E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/persons_4_years_old_and_younger.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/persons_4_years_old_and_younger.json | \n  sed -e \"s/\\\",\\\"//3g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln persons_4_years_old_and_younger\n\nif do_update = 1 then\n  wget -O download/age_of_5_and_19.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001_004E%2CB01001_005E%2CB01001_006E%2CB01001_007E%2CB01001_028E%2CB01001_029E%2CB01001_030E%2CB01001_031E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/age_of_5_and_19.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/age_of_5_and_19.json | \n  sed -e \"s/\\\",\\\"//9g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln age_of_5_and_19\n\nif do_update = 1 then\n  wget -O download/persons_between_the_age_of_20_and_64.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001_008E%2CB01001_009E%2CB01001_010E%2CB01001_011E%2CB01001_012E%2CB01001_013E%2CB01001_014E%2CB01001_015E%2CB01001_016E%2CB01001_017E%2CB01001_018E%2CB01001_019E%2CB01001_032E%2CB01001_033E%2CB01001_034E%2CB01001_035E%2CB01001_036E%2CB01001_037E%2CB01001_038E%2CB01001_039E%2CB01001_040E%2CB01001_041E%2CB01001_042E%2CB01001_043E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/persons_between_the_age_of_20_and_64.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/persons_between_the_age_of_20_and_64.json | \n  sed -e \"s/\\\",\\\"//25g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln persons_between_the_age_of_20_and_64\n\nif do_update = 1 then\n  wget -O download/persons_65_years_old_and_over.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001_020E%2CB01001_021E%2CB01001_022E%2CB01001_023E%2CB01001_024E%2CB01001_025E%2CB01001_044E%2CB01001_045E%2CB01001_046E%2CB01001_047E%2CB01001_048E%2CB01001_049E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/persons_65_years_old_and_over.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/persons_65_years_old_and_over.json | \n  sed -e \"s/\\\",\\\"//13g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln persons_65_years_old_and_over\n\nif do_update = 1 then\n  wget -O download/white_alone.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001A_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/white_alone.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/white_alone.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln white_alone\n\nif do_update = 1 then\n  wget -O download/black_or_african_american_alone.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001B_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/black_or_african_american_alone.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/black_or_african_american_alone.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln black_or_african_american_alone\n\nif do_update = 1 then\n  wget -O download/american_indian_and_alaska_native_alone.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001C_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/american_indian_and_alaska_native_alone.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/american_indian_and_alaska_native_alone.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln american_indian_and_alaska_native_alone\n\nif do_update = 1 then\n  wget -O download/asian_alone.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001D_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/asian_alone.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/asian_alone.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln asian_alone\n\nif do_update = 1 then\n  wget -O download/pacific_islander.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001E_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/pacific_islander.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/pacific_islander.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln pacific_islander\n\nif do_update = 1 then\n  wget -O download/some_other_race.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001F_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/some_other_race.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/some_other_race.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln some_other_race\n\nif do_update = 1 then\n  wget -O download/two_or_more_races.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001G_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/two_or_more_races.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/two_or_more_races.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln two_or_more_races\n\nif do_update = 1 then\n  wget -O download/hispanic_or_latino__any_race.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001I_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/hispanic_or_latino__any_race.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/hispanic_or_latino__any_race.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln hispanic_or_latino__any_race\n\nif do_update = 1 then\n  wget -O download/white_alone__not_hispanic_or_latino.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B01001H_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/white_alone__not_hispanic_or_latino.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/white_alone__not_hispanic_or_latino.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln white_alone__not_hispanic_or_latino\n\nif do_update = 1 then\n  wget -O download/high_school_degree__ged_or_lower.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B15003_002E%2CB15003_003E%2CB15003_004E%2CB15003_005E%2CB15003_006E%2CB15003_007E%2CB15003_008E%2CB15003_009E%2CB15003_010E%2CB15003_011E%2CB15003_012E%2CB15003_013E%2CB15003_014E%2CB15003_015E%2CB15003_016E%2CB15003_017E%2CB15003_018E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/high_school_degree__ged_or_lower.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/high_school_degree__ged_or_lower.json | \n  sed -e \"s/\\\",\\\"//18g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln high_school_degree__ged_or_lower\n\nif do_update = 1 then\n  wget -O download/some_college__no_degree.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B15003_019E%2CB15003_020E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/some_college__no_degree.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/some_college__no_degree.json | \n  sed -e \"s/\\\",\\\"//3g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln some_college__no_degree\n\nif do_update = 1 then\n  wget -O download/associates_degree.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B15003_021E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/associates_degree.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/associates_degree.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln associates_degree\n\nif do_update = 1 then\n  wget -O download/bachelors_degree.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B15003_022E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/bachelors_degree.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/bachelors_degree.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln bachelors_degree\n\nif do_update = 1 then\n  wget -O download/graduate_professional_degree.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B15003_023E%2CB15003_024E%2CB15003_025E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/graduate_professional_degree.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/graduate_professional_degree.json | \n  sed -e \"s/\\\",\\\"//4g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln graduate_professional_degree\n\nif do_update = 1 then\n  wget -O download/median_income_of_residents.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B19013_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/median_income_of_residents.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/median_income_of_residents.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln median_income_of_residents\n\nif do_update = 1 then\n  wget -O download/median_monthly_housing_costs.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25105_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/median_monthly_housing_costs.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/median_monthly_housing_costs.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln median_monthly_housing_costs\n\nif do_update = 1 then\n  wget -O download/median_monthly_owner_costs.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25088_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/median_monthly_owner_costs.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/median_monthly_owner_costs.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln median_monthly_owner_costs\n\nif do_update = 1 then\n  wget -O download/median_monthly_renter_costs.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25058_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/median_monthly_renter_costs.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/median_monthly_renter_costs.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln median_monthly_renter_costs\n\nif do_update = 1 then\n  wget -O download/median_monthly_owner_costs__percent_household_income.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25092_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/median_monthly_owner_costs__percent_household_income.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/median_monthly_owner_costs__percent_household_income.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln median_monthly_owner_costs__percent_household_income\n\nif do_update = 1 then\n  wget -O download/median_monthly_renter_costs__percent_household_income.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25071_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/median_monthly_renter_costs__percent_household_income.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/median_monthly_renter_costs__percent_household_income.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln median_monthly_renter_costs__percent_household_income\n\nif do_update = 1 then\n  wget -O download/aggregate_household_income.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B19025_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/aggregate_household_income.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/aggregate_household_income.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln aggregate_household_income\n\nif do_update = 1 then\n  wget -O download/households_below_poverty_level.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B17001_002E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/households_below_poverty_level.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/households_below_poverty_level.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln households_below_poverty_level\n\nif do_update = 1 then\n  wget -O download/medicare_recipients.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=C27006_004E%2CC27006_007E%2CC27006_010E%2CC27006_014E%2CC27006_017E%2CC27006_020E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/medicare_recipients.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/medicare_recipients.json | \n  sed -e \"s/\\\",\\\"//7g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln medicare_recipients\n\nif do_update = 1 then\n  wget -O download/total_medicaid_recipients.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=C27007_004E%2CC27007_007E%2CC27007_010E%2CC27007_014E%2CC27007_017E%2CC27007_020E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/total_medicaid_recipients.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_medicaid_recipients.json | \n  sed -e \"s/\\\",\\\"//7g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_medicaid_recipients\n\nif do_update = 1 then\n  wget -O download/total_snap_recipients.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B22002_002E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/total_snap_recipients.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_snap_recipients.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_snap_recipients\n\nif do_update = 1 then\n  wget -O download/armed_forces_veterans.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B21001_002E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/armed_forces_veterans.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/armed_forces_veterans.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln armed_forces_veterans\n\nif do_update = 1 then\n  wget -O download/total_number_of_disabled_residents.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B18101_004E%2CB18101_007E%2CB18101_010E%2CB18101_013E%2CB18101_016E%2CB18101_019E%2CB18101_023E%2CB18101_026E%2CB18101_029E%2CB18101_032E%2CB18101_035E%2CB18101_038E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/total_number_of_disabled_residents.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_number_of_disabled_residents.json | \n  sed -e \"s/\\\",\\\"//13g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_number_of_disabled_residents\n\nif do_update = 1 then\n  wget -O download/total_housing_units.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25017_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/total_housing_units.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_housing_units.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_housing_units\n\nif do_update = 1 then\n  wget -O download/total_single_family_houses.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25024_002E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/total_single_family_houses.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_single_family_houses.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_single_family_houses\n\nif do_update = 1 then\n  wget -O download/total_duplex_multiple_units__less_than_10_units.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25024_003E%2CB25024_004E%2CB25024_005E%2CB25024_006E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/total_duplex_multiple_units__less_than_10_units.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_duplex_multiple_units__less_than_10_units.json | \n  sed -e \"s/\\\",\\\"//5g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_duplex_multiple_units__less_than_10_units\n\nif do_update = 1 then\n  wget -O download/number_of_housing_structures_with_10_19_units.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25024_007E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/number_of_housing_structures_with_10_19_units.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/number_of_housing_structures_with_10_19_units.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln number_of_housing_structures_with_10_19_units\n\nif do_update = 1 then\n  wget -O download/number_of_housing_structures_with_20_49_units.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25024_008E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/number_of_housing_structures_with_20_49_units.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/number_of_housing_structures_with_20_49_units.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln number_of_housing_structures_with_20_49_units\n\nif do_update = 1 then\n  wget -O download/number_of_housing_structures_with_50_or_more_units.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25024_009E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/number_of_housing_structures_with_50_or_more_units.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/number_of_housing_structures_with_50_or_more_units.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln number_of_housing_structures_with_50_or_more_units\n\nif do_update = 1 then\n  wget -O download/housing_tenancy__owner_occupied_housing_units.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25003_002E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/housing_tenancy__owner_occupied_housing_units.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/housing_tenancy__owner_occupied_housing_units.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln housing_tenancy__owner_occupied_housing_units\n\nif do_update = 1 then\n  wget -O download/housing_tenancy__renter_occupied_housing_units.json \"https://api.census.gov/data/2020/acs/acs5?\n    get=B25003_003E&key=<census api key>&for=tract%3A%2A&in=state%3A12&in=county%3A086\"\ncols=$(head -n 1 download/housing_tenancy__renter_occupied_housing_units.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/housing_tenancy__renter_occupied_housing_units.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln housing_tenancy__renter_occupied_housing_units\n\n# Set datestamp as needed\nif do_update == 1 then echo $date > datestamp\n\n\n#########\n# Step 2 - SQL script (pseudo code):\n####\n\n# create variable columns in geometry table and join individual variables to the geometries using geoid as the primary key.\n-- join total_population to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN total_population integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET total_population = st.agg\n  FROM (SELECT geoid, (b01001_001e::integer) AS agg FROM total_population) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.total_population IS 'b01001_001e';\nDROP TABLE total_population;\n\n-- join persons_4_years_old_and_younger to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN persons_4_years_old_and_younger integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET persons_4_years_old_and_younger = st.agg\n  FROM (SELECT geoid, (b01001_003e::integer+b01001_027e::integer) AS agg FROM persons_4_years_old_and_younger) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.persons_4_years_old_and_younger IS 'b01001_003e+b01001_027e';\nDROP TABLE persons_4_years_old_and_younger;\n\n-- join age_of_5_and_19 to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN age_of_5_and_19 integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET age_of_5_and_19 = st.agg\n  FROM (SELECT geoid, (b01001_004e::integer+b01001_005e::integer+b01001_006e::integer+b01001_007e::integer+b01001_028e::integer+b01001_029e::integer+b01001_030e::integer+b01001_031e::integer) AS agg FROM age_of_5_and_19) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.age_of_5_and_19 IS 'b01001_004e+b01001_005e+b01001_006e+b01001_007e+b01001_028e+b01001_029e+b01001_030e+b01001_031e';\nDROP TABLE age_of_5_and_19;\n\n-- join persons_between_the_age_of_20_and_64 to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN persons_between_the_age_of_20_and_64 integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET persons_between_the_age_of_20_and_64 = st.agg\n  FROM (SELECT geoid, (b01001_008e::integer+b01001_009e::integer+b01001_010e::integer+b01001_011e::integer+b01001_012e::integer+b01001_013e::integer+b01001_014e::integer+b01001_015e::integer+b01001_016e::integer+b01001_017e::integer+b01001_018e::integer+b01001_019e::integer+b01001_032e::integer+b01001_033e::integer+b01001_034e::integer+b01001_035e::integer+b01001_036e::integer+b01001_037e::integer+b01001_038e::integer+b01001_039e::integer+b01001_040e::integer+b01001_041e::integer+b01001_042e::integer+b01001_043e::integer) AS agg FROM persons_between_the_age_of_20_and_64) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.persons_between_the_age_of_20_and_64 IS 'b01001_008e+b01001_009e+b01001_010e+b01001_011e+b01001_012e+b01001_013e+b01001_014e+b01001_015e+b01001_016e+b01001_017e+b01001_018e+b01001_019e+b01001_032e+b01001_033e+b01001_034e+b01001_035e+b01001_036e+b01001_037e+b01001_038e+b01001_039e+b01001_040e+b01001_041e+b01001_042e+b01001_043e';\nDROP TABLE persons_between_the_age_of_20_and_64;\n\n-- join persons_65_years_old_and_over to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN persons_65_years_old_and_over integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET persons_65_years_old_and_over = st.agg\n  FROM (SELECT geoid, (b01001_020e::integer+b01001_021e::integer+b01001_022e::integer+b01001_023e::integer+b01001_024e::integer+b01001_025e::integer+b01001_044e::integer+b01001_045e::integer+b01001_046e::integer+b01001_047e::integer+b01001_048e::integer+b01001_049e::integer) AS agg FROM persons_65_years_old_and_over) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.persons_65_years_old_and_over IS 'b01001_020e+b01001_021e+b01001_022e+b01001_023e+b01001_024e+b01001_025e+b01001_044e+b01001_045e+b01001_046e+b01001_047e+b01001_048e+b01001_049e';\nDROP TABLE persons_65_years_old_and_over;\n\n-- join white_alone to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN white_alone integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET white_alone = st.agg\n  FROM (SELECT geoid, (b01001a_001e::integer) AS agg FROM white_alone) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.white_alone IS 'b01001a_001e';\nDROP TABLE white_alone;\n\n-- join black_or_african_american_alone to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN black_or_african_american_alone integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET black_or_african_american_alone = st.agg\n  FROM (SELECT geoid, (b01001b_001e::integer) AS agg FROM black_or_african_american_alone) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.black_or_african_american_alone IS 'b01001b_001e';\nDROP TABLE black_or_african_american_alone;\n\n-- join american_indian_and_alaska_native_alone to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN american_indian_and_alaska_native_alone integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET american_indian_and_alaska_native_alone = st.agg\n  FROM (SELECT geoid, (b01001c_001e::integer) AS agg FROM american_indian_and_alaska_native_alone) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.american_indian_and_alaska_native_alone IS 'b01001c_001e';\nDROP TABLE american_indian_and_alaska_native_alone;\n\n-- join asian_alone to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN asian_alone integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET asian_alone = st.agg\n  FROM (SELECT geoid, (b01001d_001e::integer) AS agg FROM asian_alone) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.asian_alone IS 'b01001d_001e';\nDROP TABLE asian_alone;\n\n-- join pacific_islander to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN pacific_islander integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET pacific_islander = st.agg\n  FROM (SELECT geoid, (b01001e_001e::integer) AS agg FROM pacific_islander) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.pacific_islander IS 'b01001e_001e';\nDROP TABLE pacific_islander;\n\n-- join some_other_race to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN some_other_race integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET some_other_race = st.agg\n  FROM (SELECT geoid, (b01001f_001e::integer) AS agg FROM some_other_race) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.some_other_race IS 'b01001f_001e';\nDROP TABLE some_other_race;\n\n-- join two_or_more_races to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN two_or_more_races integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET two_or_more_races = st.agg\n  FROM (SELECT geoid, (b01001g_001e::integer) AS agg FROM two_or_more_races) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.two_or_more_races IS 'b01001g_001e';\nDROP TABLE two_or_more_races;\n\n-- join hispanic_or_latino__any_race to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN hispanic_or_latino__any_race integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET hispanic_or_latino__any_race = st.agg\n  FROM (SELECT geoid, (b01001i_001e::integer) AS agg FROM hispanic_or_latino__any_race) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.hispanic_or_latino__any_race IS 'b01001i_001e';\nDROP TABLE hispanic_or_latino__any_race;\n\n-- join white_alone__not_hispanic_or_latino to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN white_alone__not_hispanic_or_latino integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET white_alone__not_hispanic_or_latino = st.agg\n  FROM (SELECT geoid, (b01001h_001e::integer) AS agg FROM white_alone__not_hispanic_or_latino) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.white_alone__not_hispanic_or_latino IS 'b01001h_001e';\nDROP TABLE white_alone__not_hispanic_or_latino;\n\n-- join high_school_degree__ged_or_lower to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN high_school_degree__ged_or_lower integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET high_school_degree__ged_or_lower = st.agg\n  FROM (SELECT geoid, (b15003_002e::integer+b15003_003e::integer+b15003_004e::integer+b15003_005e::integer+b15003_006e::integer+b15003_007e::integer+b15003_008e::integer+b15003_009e::integer+b15003_010e::integer+b15003_011e::integer+b15003_012e::integer+b15003_013e::integer+b15003_014e::integer+b15003_015e::integer+b15003_016e::integer+b15003_017e::integer+b15003_018e::integer) AS agg FROM high_school_degree__ged_or_lower) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.high_school_degree__ged_or_lower IS 'b15003_002e+b15003_003e+b15003_004e+b15003_005e+b15003_006e+b15003_007e+b15003_008e+b15003_009e+b15003_010e+b15003_011e+b15003_012e+b15003_013e+b15003_014e+b15003_015e+b15003_016e+b15003_017e+b15003_018e';\nDROP TABLE high_school_degree__ged_or_lower;\n\n-- join some_college__no_degree to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN some_college__no_degree integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET some_college__no_degree = st.agg\n  FROM (SELECT geoid, (b15003_019e::integer+b15003_020e::integer) AS agg FROM some_college__no_degree) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.some_college__no_degree IS 'b15003_019e+b15003_020e';\nDROP TABLE some_college__no_degree;\n\n-- join associates_degree to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN associates_degree integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET associates_degree = st.agg\n  FROM (SELECT geoid, (b15003_021e::integer) AS agg FROM associates_degree) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.associates_degree IS 'b15003_021e';\nDROP TABLE associates_degree;\n\n-- join bachelors_degree to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN bachelors_degree integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET bachelors_degree = st.agg\n  FROM (SELECT geoid, (b15003_022e::integer) AS agg FROM bachelors_degree) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.bachelors_degree IS 'b15003_022e';\nDROP TABLE bachelors_degree;\n\n-- join graduate_professional_degree to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN graduate_professional_degree integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET graduate_professional_degree = st.agg\n  FROM (SELECT geoid, (b15003_023e::integer+b15003_024e::integer+b15003_025e::integer) AS agg FROM graduate_professional_degree) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.graduate_professional_degree IS 'b15003_023e+b15003_024e+b15003_025e';\nDROP TABLE graduate_professional_degree;\n\n-- join median_income_of_residents to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN median_income_of_residents integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET median_income_of_residents = st.agg\n  FROM (SELECT geoid, (b19013_001e::integer) AS agg FROM median_income_of_residents) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.median_income_of_residents IS 'b19013_001e';\nDROP TABLE median_income_of_residents;\n\n-- join median_monthly_housing_costs to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN median_monthly_housing_costs integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET median_monthly_housing_costs = st.agg\n  FROM (SELECT geoid, (b25105_001e::integer) AS agg FROM median_monthly_housing_costs) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.median_monthly_housing_costs IS 'b25105_001e';\nDROP TABLE median_monthly_housing_costs;\n\n-- join median_monthly_owner_costs to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN median_monthly_owner_costs integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET median_monthly_owner_costs = st.agg\n  FROM (SELECT geoid, (b25088_001e::integer) AS agg FROM median_monthly_owner_costs) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.median_monthly_owner_costs IS 'b25088_001e';\nDROP TABLE median_monthly_owner_costs;\n\n-- join median_monthly_renter_costs to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN median_monthly_renter_costs integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET median_monthly_renter_costs = st.agg\n  FROM (SELECT geoid, (b25058_001e::integer) AS agg FROM median_monthly_renter_costs) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.median_monthly_renter_costs IS 'b25058_001e';\nDROP TABLE median_monthly_renter_costs;\n\n-- join median_monthly_owner_costs__percent_household_income to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN median_monthly_owner_costs__percent_household_income real;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET median_monthly_owner_costs__percent_household_income = st.agg\n  FROM (SELECT geoid, (b25092_001e::real) AS agg FROM median_monthly_owner_costs__percent_household_income) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.median_monthly_owner_costs__percent_household_income IS 'b25092_001e';\nDROP TABLE median_monthly_owner_costs__percent_household_income;\n\n-- join median_monthly_renter_costs__percent_household_income to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN median_monthly_renter_costs__percent_household_income real;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET median_monthly_renter_costs__percent_household_income = st.agg\n  FROM (SELECT geoid, (b25071_001e::real) AS agg FROM median_monthly_renter_costs__percent_household_income) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.median_monthly_renter_costs__percent_household_income IS 'b25071_001e';\nDROP TABLE median_monthly_renter_costs__percent_household_income;\n\n-- join aggregate_household_income to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN aggregate_household_income integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET aggregate_household_income = st.agg\n  FROM (SELECT geoid, (b19025_001e::integer) AS agg FROM aggregate_household_income) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.aggregate_household_income IS 'b19025_001e';\nDROP TABLE aggregate_household_income;\n\n-- join households_below_poverty_level to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN households_below_poverty_level integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET households_below_poverty_level = st.agg\n  FROM (SELECT geoid, (b17001_002e::integer) AS agg FROM households_below_poverty_level) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.households_below_poverty_level IS 'b17001_002e';\nDROP TABLE households_below_poverty_level;\n\n-- join medicare_recipients to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN medicare_recipients integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET medicare_recipients = st.agg\n  FROM (SELECT geoid, (c27006_004e::integer+c27006_007e::integer+c27006_010e::integer+c27006_014e::integer+c27006_017e::integer+c27006_020e::integer) AS agg FROM medicare_recipients) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.medicare_recipients IS 'c27006_004e+c27006_007e+c27006_010e+c27006_014e+c27006_017e+c27006_020e';\nDROP TABLE medicare_recipients;\n\n-- join total_medicaid_recipients to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN total_medicaid_recipients integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET total_medicaid_recipients = st.agg\n  FROM (SELECT geoid, (c27007_004e::integer+c27007_007e::integer+c27007_010e::integer+c27007_014e::integer+c27007_017e::integer+c27007_020e::integer) AS agg FROM total_medicaid_recipients) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.total_medicaid_recipients IS 'c27007_004e+c27007_007e+c27007_010e+c27007_014e+c27007_017e+c27007_020e';\nDROP TABLE total_medicaid_recipients;\n\n-- join total_snap_recipients to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN total_snap_recipients integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET total_snap_recipients = st.agg\n  FROM (SELECT geoid, (b22002_002e::integer) AS agg FROM total_snap_recipients) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.total_snap_recipients IS 'b22002_002e';\nDROP TABLE total_snap_recipients;\n\n-- join armed_forces_veterans to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN armed_forces_veterans integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET armed_forces_veterans = st.agg\n  FROM (SELECT geoid, (b21001_002e::integer) AS agg FROM armed_forces_veterans) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.armed_forces_veterans IS 'b21001_002e';\nDROP TABLE armed_forces_veterans;\n\n-- join total_number_of_disabled_residents to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN total_number_of_disabled_residents integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET total_number_of_disabled_residents = st.agg\n  FROM (SELECT geoid, (b18101_004e::integer+b18101_007e::integer+b18101_010e::integer+b18101_013e::integer+b18101_016e::integer+b18101_019e::integer+b18101_023e::integer+b18101_026e::integer+b18101_029e::integer+b18101_032e::integer+b18101_035e::integer+b18101_038e::integer) AS agg FROM total_number_of_disabled_residents) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.total_number_of_disabled_residents IS 'b18101_004e+b18101_007e+b18101_010e+b18101_013e+b18101_016e+b18101_019e+b18101_023e+b18101_026e+b18101_029e+b18101_032e+b18101_035e+b18101_038e';\nDROP TABLE total_number_of_disabled_residents;\n\n-- join total_housing_units to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN total_housing_units integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET total_housing_units = st.agg\n  FROM (SELECT geoid, (b25017_001e::integer) AS agg FROM total_housing_units) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.total_housing_units IS 'b25017_001e';\nDROP TABLE total_housing_units;\n\n-- join total_single_family_houses to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN total_single_family_houses integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET total_single_family_houses = st.agg\n  FROM (SELECT geoid, (b25024_002e::integer) AS agg FROM total_single_family_houses) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.total_single_family_houses IS 'b25024_002e';\nDROP TABLE total_single_family_houses;\n\n-- join total_duplex_multiple_units__less_than_10_units to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN total_duplex_multiple_units__less_than_10_units integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET total_duplex_multiple_units__less_than_10_units = st.agg\n  FROM (SELECT geoid, (b25024_003e::integer+b25024_004e::integer+b25024_005e::integer+b25024_006e::integer) AS agg FROM total_duplex_multiple_units__less_than_10_units) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.total_duplex_multiple_units__less_than_10_units IS 'b25024_003e+b25024_004e+b25024_005e+b25024_006e';\nDROP TABLE total_duplex_multiple_units__less_than_10_units;\n\n-- join number_of_housing_structures_with_10_19_units to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN number_of_housing_structures_with_10_19_units integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET number_of_housing_structures_with_10_19_units = st.agg\n  FROM (SELECT geoid, (b25024_007e::integer) AS agg FROM number_of_housing_structures_with_10_19_units) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.number_of_housing_structures_with_10_19_units IS 'b25024_007e';\nDROP TABLE number_of_housing_structures_with_10_19_units;\n\n-- join number_of_housing_structures_with_20_49_units to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN number_of_housing_structures_with_20_49_units integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET number_of_housing_structures_with_20_49_units = st.agg\n  FROM (SELECT geoid, (b25024_008e::integer) AS agg FROM number_of_housing_structures_with_20_49_units) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.number_of_housing_structures_with_20_49_units IS 'b25024_008e';\nDROP TABLE number_of_housing_structures_with_20_49_units;\n\n-- join number_of_housing_structures_with_50_or_more_units to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN number_of_housing_structures_with_50_or_more_units integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET number_of_housing_structures_with_50_or_more_units = st.agg\n  FROM (SELECT geoid, (b25024_009e::integer) AS agg FROM number_of_housing_structures_with_50_or_more_units) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.number_of_housing_structures_with_50_or_more_units IS 'b25024_009e';\nDROP TABLE number_of_housing_structures_with_50_or_more_units;\n\n-- join housing_tenancy__owner_occupied_housing_units to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN housing_tenancy__owner_occupied_housing_units integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET housing_tenancy__owner_occupied_housing_units = st.agg\n  FROM (SELECT geoid, (b25003_002e::integer) AS agg FROM housing_tenancy__owner_occupied_housing_units) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.housing_tenancy__owner_occupied_housing_units IS 'b25003_002e';\nDROP TABLE housing_tenancy__owner_occupied_housing_units;\n\n-- join housing_tenancy__renter_occupied_housing_units to mdc_2020_acs_5yr_tract_dvmt\nALTER TABLE mdc_2020_acs_5yr_tract_dvmt ADD COLUMN housing_tenancy__renter_occupied_housing_units integer;\nUPDATE mdc_2020_acs_5yr_tract_dvmt\n  SET housing_tenancy__renter_occupied_housing_units = st.agg\n  FROM (SELECT geoid, (b25003_003e::integer) AS agg FROM housing_tenancy__renter_occupied_housing_units) st \n  WHERE mdc_2020_acs_5yr_tract_dvmt.geoid = st.geoid;\nCOMMENT ON COLUMN mdc_2020_acs_5yr_tract_dvmt.housing_tenancy__renter_occupied_housing_units IS 'b25003_003e';\nDROP TABLE housing_tenancy__renter_occupied_housing_units;\n\nDELETE FROM mdc_2020_acs_5yr_tract_dvmt WHERE total_population is Null;\n",
  "prov:wasGeneratedBy": "GDSC automation (see Process Step)",
  "dcat:contactPoint": ["Timothy Norris", "Librarian Associate Professor", "University of Miami Libraries, Frost Institute for Data Science and Computing", "txn60@miami.edu"],
  "gdsc:label": "geoid",
  "gdsc:attributes": ["total_population;Total population in census tract;B01001_001E;integer;people", "persons_4_years_old_and_younger;Number of people 4 years old and younger;B01001_003E+B01001_027E;integer;people", "age_of_5_and_19;Number of people with age of 5 to 20;(B01001_004E:B01001_007E)+(B01001_028E:B01001_031E);integer;people", "persons_between_the_age_of_20_and_64;Number of people between the age of 20 and 65;(B01001_008E:B01001_019E)+(B01001_032E:B01001_043E);integer;people", "persons_65_years_old_and_over;Number of people 65 years old and over;(B01001_020E:B01001_025E)+(B01001_044E:B01001_049E);integer;people", "white_alone;Number of people who identify as white alone;B01001A_001E;integer;people", "black_or_african_american_alone;Number of people who identify as black or African American alone;B01001B_001E;integer;people", "american_indian_and_alaska_native_alone;Number of people who identify as American Indian and Alaska Native alone;B01001C_001E;integer;people", "asian_alone;Number of people who identify as Asian alone;B01001D_001E;integer;people", "pacific_islander;Number of people who identify as pacific islander;B01001E_001E;integer;people", "some_other_race;Number of people who identify as some other race;B01001F_001E;integer;people", "two_or_more_races;Number of people who identify as two or more races;B01001G_001E;integer;people", "hispanic_or_latino__any_race;Number of people who identify as Hispanic or Latino any race;B01001I_001E;integer;people", "white_alone__not_hispanic_or_latino;Number of people who identify as white alone and not Hispanic or latino;B01001H_001E;integer;people", "high_school_degree__ged_or_lower;Number of people with high school degree, GED, or lower;B15003_002E:B15003_018E;integer;people", "some_college__no_degree;Number of people with some college but no degree;B15003_019E:B15003_020E;integer;people", "associates_degree;Number of people with associates degree;B15003_021E;integer;people", "bachelors_degree;Number of people with bachelors degree;B15003_022E;integer;people", "graduate_professional_degree;Number of people with graduate professional degree;B15003_023E:B15003_025E;integer;people", "median_income_of_residents;Median income of residents in US dollars;B19013_001E;integer;usd", "median_monthly_housing_costs;Median monthly housing costs in US dollars;B25105_001E;integer;usd", "median_monthly_owner_costs;Median monthly owner costs in US dollars;B25088_001E;integer;usd", "median_monthly_renter_costs;Median monthly renter costs in US dollars;B25058_001E;integer;usd", "median_monthly_owner_costs__percent_household_income;Median monthly owner costs as percent household income;B25092_001E;real;percent", "median_monthly_renter_costs__percent_household_income;Median monthly renter costs as percent household income;B25071_001E;real;percent", "aggregate_household_income;Aggregate household income in US dollars;B19025_001E;integer;usd", "households_below_poverty_level;Number of households below poverty level;B17001_002E;integer;households", "medicare_recipients;Number of people that are medicare recipients;C27006_004E+C27006_007E+C27006_010E+C27006_014E+C27006_017E+C27006_020E;integer;people", "total_medicaid_recipients;Total number of people that are medicaid recipients;C27007_004E+C27007_007E+C27007_010E+C27007_014E+C27007_017E+C27007_020E;integer;people", "total_snap_recipients;Total number of people that are snap recipients;B22002_002E;integer;people", "armed_forces_veterans;Number of people that are armed forces veterans;B21001_002E;integer;people", "total_number_of_disabled_residents;Total number of people that are disabled residents;B18101_004E+B18101_007E+B18101_010E+B18101_013E+B18101_016E+B18101_019E+B18101_023E+B18101_026E+B18101_029E+B18101_032E+B18101_035E+B18101_038E;integer;people", "total_housing_units;Total number of housing units;B25017_001E;integer;housing units", "total_single_family_houses;Total number of single family houses;B25024_002E;integer;houses", "total_duplex_multiple_units__less_than_10_units;Total number of duplex multiple units with less than 10 units;B25024_003E:B25024_006E;integer;structures", "number_of_housing_structures_with_10_19_units;Number of housing structures with 10 to 19 units;B25024_007E;integer;structures", "number_of_housing_structures_with_20_49_units;Number of housing structures with 20 to 49 units;B25024_008E;integer;structures", "number_of_housing_structures_with_50_or_more_units;Number of housing structures with 50 or more units;B25024_009E;integer;structures", "housing_tenancy__owner_occupied_housing_units;Number of owner occupied housing units;B25003_002E;integer;housing units", "housing_tenancy__renter_occupied_housing_units;Number of renter occupied housing units;B25003_003E;integer;housing units"],
  "gdsc:collections": ["Census"],
  "gdsc:functions": ["gdsc_get_attributes"],
  "gdsc:analyticConformsTo": "EPSG:2236",
  "gdsc:arcgisSD": "mdc_2020_acs_5yr_tract_dvmt.sd",
  "gdsc:sponsor": ["IDSC;https://idsc.miami.edu", "Library;https://www.library.miami.edu"],
  "dcat:downloadURL": "https://api.census.gov/data/2020/acs/acs5/",
  "gdsc:tablename": "mdc_2020_acs_5yr_tract_dvmt",
  "dcat:qualifiedRelation": ["fl_2020_tl_tract"],
  "gdsc:up": "true",
  "gdsc:podID": "postgis-wdlak51fst7eygbo",
  "dct:modified": "2024-10-03 15:45:48",
  "dct:accrualPeriodicity": "Never",
  "spdx:checksum": "TBD",
  "dct:extent": ["1120438", "1.1M"],
  "dcat:bbox": "POLYGON((-80.87360000000001 25.13742,-80.87360000000001 25.979433999999998,-80.06278999999999 25.979433999999998,-80.06278999999999 25.13742,-80.87360000000001 25.13742))"
}
