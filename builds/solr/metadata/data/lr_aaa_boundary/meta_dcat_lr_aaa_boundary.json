{
  "dct:title": "Little River Boundary",
  "dct:creator": ["Miami-Dade County"],
  "dct:publisher": ["University of Miami GDSC"],
  "dct:rights": "Public Domain",
  "dct:license": "Miami-Dade County provides this data for use \"as is\". The areas depicted by this map/data are approximate, and are not accurate to surveying or engineering standards. The maps/data shown here are for illustration purposes only and are not suitable for site-specific decision making. Information found here should not be used for making financial or any other commitments. Miami-Dade County provides this information with the understanding that it is not guaranteed to be accurate, correct or complete and conclusions drawn from such information are the sole responsibility of the user. While every effort has been made to ensure the accuracy, correctness and timeliness of materials presented, Miami-Dade County assumes no responsibility for errors or omissions, even if Miami-Dade County is advised of the possibility of such damage.",
  "dct:coverage": ["Little River"],
  "dct:type": "Vector Dataset",
  "dct:issued": "2024-01-02T00:00:00Z",
  "dct:description": "Boundary layer for the Adaptation Action Area in Little River.",
  "dcat:keyword": ["Florida", "Miami-Dade County", "Little River"],
  "dct:language": "en",
  "adms:representationTechnique": "vector",
  "locn:geometry": "multipolygon",
  "dct:conformsTo": "EPSG:2236",
  "prov:action": "#########\n# GDSC ETL is performed in two steps: shell script to ETL data into postgres\n# and then additional transformations with SQL in postGIS (if needed).\n####\n\n#########\n# Step 1 - bash script (pseudo code)\n####\n\n# create directory structure and move into it\nmkdir -p /data/lr_aaa_boundary/{download,etl} && cd /data/lr_aaa_boundary\n\n# set update flag based on last update and update frequency\ndo_update=0 if date() < last_update + update_frequency else do_update = 1\n\n# load into postGIS with:\n  ogr2ogr -lco GEOMETRY_NAME=geom -f PostgreSQL PG:\"<postgres connection>\" download/LittleRiver_AAA_Boundary.shp -nlt multipolygon -nln lr_aaa_boundary\n\n#########\n# Step 2 - SQL script (pseudo code):\n####\n\n# remove duplicate points and make geometries valid:\nUPDATE lr_aaa_boundary\n  SET geom=ST_MakeValid(ST_RemoveRepeatedPoints(geom));\"\n\n# add local geometry column and reproject existing geometries into local EPSG:\nSELECT AddGeometryColumn (\n  'lr_aaa_boundary',\n  'geom_local',2236,'multipolygon',2\n);\nUPDATE lr_aaa_boundary\n  SET geom_local=ST_MakeValid(ST_RemoveRepeatedPoints(ST_Transform(ST_Multi(geom),2236)));\nCREATE INDEX lr_aaa_boundary_geom_local_idx\n  ON lr_aaa_boundary\n  USING GIST (geom_local);\nNOTIFY pgrst, 'reload schema';\"",
  "prov:wasGeneratedBy": "GDSC automation (see Process Step)",
  "dcat:contactPoint": ["Timothy Norris", "Librarian Associate Professor", "University of Miami Libraries, Frost Institute for Data Science and Computing", "txn60@miami.edu"],
  "gdsc:label": "id",
  "gdsc:collections": ["Miami-Dade Climate Resilience", "Little River Climate Resilience"],
  "gdsc:functions": ["gdsc_get_attributes"],
  "gdsc:analyticConformsTo": "EPSG:2236",
  "gdsc:sponsor": ["IDSC;https://idsc.miami.edu", "Library;https://www.library.miami.edu"],
  "dcat:downloadURL": "file:///data/lr_boundary/download/LittleRiver_AAA_Boundary.shp",
  "gdsc:tablename": "lr_aaa_boundary",
  "gdsc:up": "true",
  "gdsc:podID": "postgis-2e61pbrwhns8d22m",
  "dct:modified": "2024-10-22 11:16:38",
  "dct:accrualPeriodicity": "Never",
  "spdx:checksum": "TBD",
  "dct:extent": ["5533", "5.5K"],
  "dcat:bbox": "POLYGON((-80.20800369006494 25.840989362977226,-80.20800369006494 25.85941051467628,-80.17117410378934 25.85941051467628,-80.17117410378934 25.840989362977226,-80.20800369006494 25.840989362977226))"
}
