{
  "dct:title": "2021 Florida ACS 5 Year Estimates - Tract Level - FSR",
  "dct:creator": ["Department of Commerce", "U.S. Census Bureau"],
  "dct:identifier": "https://www.census.gov/data/developers/data-sets/acs-5year.html",
  "dct:publisher": ["Department of Commerce", "U.S. Census Bureau"],
  "dct:rights": "Public Domain",
  "dct:license": "This Software was created by U.S. Government employees and therefore is not subject to copyright in the United States (17 U.S.C. \u00a7105). The United States/U.S.Department of Commerce (\u201cCommerce\u201d) reserve all rights to seek and obtain copyright protection in countries other than the United States. The United States/Commerce hereby grant to User a royalty-free, nonexclusive license to use, copy, and create derivative works of the Software outside of the United States.\n\nThe Software is provided to the User and those who may take by, through or under it, \u201cas is,\u201d without any warranty (whether express or implied) or representation whatsoever, including but not limited to any warranty of merchantability. The Software is taken hereunder without any right to support or to any improvements, extensions, or modifications, except as may be agreed to separately, in writing, by Commerce.\n\nUser, on behalf of itself and all others who take by, through or under it, hereby and forever waives, releases, and discharges the United States/Commerce and all its instrumentalities from any and all liabilities and obligations in connection with the use, application, sale or conveyance of the Software. User shall indemnify and hold harmless the United States/Commerce and its instrumentalities from all claims, liabilities, demands, damages, expenses, and losses arising from or in connection with User's use, application, sale or conveyance of the Software, including those who take by, through or under User whether or not User was directly involved. This provision will survive termination of this Agreement and will include any and all claims or liabilities arising under intellectual property rights, such as patents, copyrights, trademarks, and trade secrets. If User of software is an Executive Agency of the United States, this clause is not applicable.\n\nThe construction, validity, performance, and effect of this Agreement for all purposes will be governed by Federal law of the United States.\n\nUser agrees to make a good faith effort to use the Software in a way that does not cause damage, harm, or embarrassment to the United States/Commerce. The United States/Commerce expressly reserve all rights and remedies.",
  "dct:coverage": ["United States", "Florida"],
  "dct:relation": ["tl_2021_12_tract"],
  "dct:type": "API",
  "dct:issued": "2022-12-08T00:00:00Z",
  "dct:description": "A special collection of aggregated columns from the 2021 5-year ACS variables at the census tract level selected for use with the Florida Stroke Registry. Please see the column metadata for the description of the columns.",
  "prov:qualifiedAttribution": "direct from source and aggregated according to custom specification, see ETL documentation",
  "dcat:keyword": ["Florida", "Census", "ACS 2021", "2021", "5-Year Estimates", "Tract", "Census Tract", "Demographic", "Population", "FSR"],
  "dct:language": "en",
  "adms:representationTechnique": "vector",
  "locn:geometry": "multipolygon",
  "prov:action": "#########\n# GDSC ETL is performed in two steps: shell script to ETL data into postgres\n# and then additional transformations with SQL in postGIS (if needed).\n####\n\n#########\n# Step 1 - bash script (pseudo code)\n####\n\n# create directory structure and move into it\nmkdir -p /data/fl_2021_acs_5yr_tract_fsr/{download,etl} && cd /data/fl_2021_acs_5yr_tract_fsr\n\n# set update flag based on last update and update frequency\ndo_update=0 if date() < last_update + update_frequency else do_update = 1\n\n# download specific variables from the census API, reformat census json to csv,\n# and load as individual tables into postGIS with ogr2ogr.\nif do_update = 1 then\n  wget -O download/total_population.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B01001_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/total_population.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/total_population.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln total_population\n\nif do_update = 1 then\n  wget -O download/hispanic_population.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B01001I_001E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/hispanic_population.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/hispanic_population.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln hispanic_population\n\nif do_update = 1 then\n  wget -O download/creole_speaking.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=C16001_008E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/creole_speaking.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/creole_speaking.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln creole_speaking\n\nif do_update = 1 then\n  wget -O download/latin_america_born.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B05007_048E%2CB05007_045E%2CB05007_051E%2CB05007_042E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/latin_america_born.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/latin_america_born.json | \n  sed -e \"s/\\\",\\\"//5g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln latin_america_born\n\nif do_update = 1 then\n  wget -O download/persons_4_years_old_and_younger.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B01001_003E%2CB01001_027E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/persons_4_years_old_and_younger.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/persons_4_years_old_and_younger.json | \n  sed -e \"s/\\\",\\\"//3g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln persons_4_years_old_and_younger\n\nif do_update = 1 then\n  wget -O download/age_of_5_and_19.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B01001_004E%2CB01001_005E%2CB01001_006E%2CB01001_007E%2CB01001_028E%2CB01001_029E%2CB01001_030E%2CB01001_031E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/age_of_5_and_19.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/age_of_5_and_19.json | \n  sed -e \"s/\\\",\\\"//9g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln age_of_5_and_19\n\nif do_update = 1 then\n  wget -O download/persons_between_the_age_of_20_and_64.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B01001_008E%2CB01001_009E%2CB01001_010E%2CB01001_011E%2CB01001_012E%2CB01001_013E%2CB01001_014E%2CB01001_015E%2CB01001_016E%2CB01001_017E%2CB01001_018E%2CB01001_019E%2CB01001_032E%2CB01001_033E%2CB01001_034E%2CB01001_035E%2CB01001_036E%2CB01001_037E%2CB01001_038E%2CB01001_039E%2CB01001_040E%2CB01001_041E%2CB01001_042E%2CB01001_043E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/persons_between_the_age_of_20_and_64.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/persons_between_the_age_of_20_and_64.json | \n  sed -e \"s/\\\",\\\"//25g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln persons_between_the_age_of_20_and_64\n\nif do_update = 1 then\n  wget -O download/persons_65_years_old_and_over.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B01001_020E%2CB01001_021E%2CB01001_022E%2CB01001_023E%2CB01001_024E%2CB01001_025E%2CB01001_044E%2CB01001_045E%2CB01001_046E%2CB01001_047E%2CB01001_048E%2CB01001_049E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/persons_65_years_old_and_over.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/persons_65_years_old_and_over.json | \n  sed -e \"s/\\\",\\\"//13g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln persons_65_years_old_and_over\n\nif do_update = 1 then\n  wget -O download/born_in_haiti.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B05006_138E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/born_in_haiti.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/born_in_haiti.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln born_in_haiti\n\nif do_update = 1 then\n  wget -O download/born_in_venezuela.json \"https://api.census.gov/data/2021/acs/acs5?\n    get=B05006_164E&key=<census api key>&for=tract%3A%2A&in=state%3A12\"\ncols=$(head -n 1 download/born_in_venezuela.json | awk -F, '{print NF-2}')\nawk '{gsub(/\\[|\\]|.$/,\"\"); print;}' download/born_in_venezuela.json | \n  sed -e \"s/\\\",\\\"//2g\" -e \"s/\\\"state.*\\\"/\\\"geoid\\\"/1\" | \n  ogr2ogr -f PostgreSQL PG:\"<postgres_connection>\" csv:/vsistdin/ -nln born_in_venezuela\n\n# Set datestamp as needed\nif do_update == 1 then echo $date > datestamp\n\n\n#########\n# Step 2 - SQL script (pseudo code):\n####\n\n# create variable columns in geometry table and join individual variables to the geometries using geoid as the primary key.\n-- join total_population to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN total_population integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET total_population = st.agg\n  FROM (SELECT geoid, (b01001_001e::integer) AS agg FROM total_population) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.total_population IS 'b01001_001e';\nDROP TABLE total_population;\n\n-- join hispanic_population to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN hispanic_population integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET hispanic_population = st.agg\n  FROM (SELECT geoid, (b01001i_001e::integer) AS agg FROM hispanic_population) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.hispanic_population IS 'b01001i_001e';\nDROP TABLE hispanic_population;\n\n-- join creole_speaking to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN creole_speaking int4;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET creole_speaking = st.agg\n  FROM (SELECT geoid, (c16001_008e::int4) AS agg FROM creole_speaking) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.creole_speaking IS 'c16001_008e';\nDROP TABLE creole_speaking;\n\n-- join latin_america_born to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN latin_america_born int4;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET latin_america_born = st.agg\n  FROM (SELECT geoid, (b05007_048e::int4+b05007_045e::int4+b05007_051e::int4+b05007_042e::int4) AS agg FROM latin_america_born) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.latin_america_born IS 'b05007_048e+b05007_045e+b05007_051e+b05007_042e';\nDROP TABLE latin_america_born;\n\n-- join persons_4_years_old_and_younger to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN persons_4_years_old_and_younger integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET persons_4_years_old_and_younger = st.agg\n  FROM (SELECT geoid, (b01001_003e::integer+b01001_027e::integer) AS agg FROM persons_4_years_old_and_younger) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.persons_4_years_old_and_younger IS 'b01001_003e+b01001_027e';\nDROP TABLE persons_4_years_old_and_younger;\n\n-- join age_of_5_and_19 to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN age_of_5_and_19 integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET age_of_5_and_19 = st.agg\n  FROM (SELECT geoid, (b01001_004e::integer+b01001_005e::integer+b01001_006e::integer+b01001_007e::integer+b01001_028e::integer+b01001_029e::integer+b01001_030e::integer+b01001_031e::integer) AS agg FROM age_of_5_and_19) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.age_of_5_and_19 IS 'b01001_004e+b01001_005e+b01001_006e+b01001_007e+b01001_028e+b01001_029e+b01001_030e+b01001_031e';\nDROP TABLE age_of_5_and_19;\n\n-- join persons_between_the_age_of_20_and_64 to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN persons_between_the_age_of_20_and_64 integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET persons_between_the_age_of_20_and_64 = st.agg\n  FROM (SELECT geoid, (b01001_008e::integer+b01001_009e::integer+b01001_010e::integer+b01001_011e::integer+b01001_012e::integer+b01001_013e::integer+b01001_014e::integer+b01001_015e::integer+b01001_016e::integer+b01001_017e::integer+b01001_018e::integer+b01001_019e::integer+b01001_032e::integer+b01001_033e::integer+b01001_034e::integer+b01001_035e::integer+b01001_036e::integer+b01001_037e::integer+b01001_038e::integer+b01001_039e::integer+b01001_040e::integer+b01001_041e::integer+b01001_042e::integer+b01001_043e::integer) AS agg FROM persons_between_the_age_of_20_and_64) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.persons_between_the_age_of_20_and_64 IS 'b01001_008e+b01001_009e+b01001_010e+b01001_011e+b01001_012e+b01001_013e+b01001_014e+b01001_015e+b01001_016e+b01001_017e+b01001_018e+b01001_019e+b01001_032e+b01001_033e+b01001_034e+b01001_035e+b01001_036e+b01001_037e+b01001_038e+b01001_039e+b01001_040e+b01001_041e+b01001_042e+b01001_043e';\nDROP TABLE persons_between_the_age_of_20_and_64;\n\n-- join persons_65_years_old_and_over to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN persons_65_years_old_and_over integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET persons_65_years_old_and_over = st.agg\n  FROM (SELECT geoid, (b01001_020e::integer+b01001_021e::integer+b01001_022e::integer+b01001_023e::integer+b01001_024e::integer+b01001_025e::integer+b01001_044e::integer+b01001_045e::integer+b01001_046e::integer+b01001_047e::integer+b01001_048e::integer+b01001_049e::integer) AS agg FROM persons_65_years_old_and_over) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.persons_65_years_old_and_over IS 'b01001_020e+b01001_021e+b01001_022e+b01001_023e+b01001_024e+b01001_025e+b01001_044e+b01001_045e+b01001_046e+b01001_047e+b01001_048e+b01001_049e';\nDROP TABLE persons_65_years_old_and_over;\n\n-- join born_in_haiti to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN born_in_haiti integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET born_in_haiti = st.agg\n  FROM (SELECT geoid, (b05006_138e::integer) AS agg FROM born_in_haiti) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.born_in_haiti IS 'b05006_138e';\nDROP TABLE born_in_haiti;\n\n-- join born_in_venezuela to fl_2021_acs_5yr_tract_fsr\nALTER TABLE fl_2021_acs_5yr_tract_fsr ADD COLUMN born_in_venezuela integer;\nUPDATE fl_2021_acs_5yr_tract_fsr\n  SET born_in_venezuela = st.agg\n  FROM (SELECT geoid, (b05006_164e::integer) AS agg FROM born_in_venezuela) st \n  WHERE fl_2021_acs_5yr_tract_fsr.geoid = st.geoid;\nCOMMENT ON COLUMN fl_2021_acs_5yr_tract_fsr.born_in_venezuela IS 'b05006_164e';\nDROP TABLE born_in_venezuela;\n\nDELETE FROM fl_2021_acs_5yr_tract_fsr WHERE total_population is Null;\n",
  "prov:wasGeneratedBy": "GDSC automation (see Process Step)",
  "dcat:contactPoint": ["Timothy Norris", "Librarian Associate Professor", "University of Miami Libraries, Frost Institute for Data Science and Computing", "txn60@miami.edu"],
  "gdsc:label": "geoid",
  "gdsc:attributes": ["total_population;Total population in census tract;B01001_001E;integer;people", "hispanic_population;Number of people who identify as Hispanic or Latino any race;B01001I_001E;integer;people", "creole_speaking;Number of Creole speaking people in the tract;C16001_008E;int4;people", "latin_america_born;Number of people who migrated from Latin America and the Caribbean;B05007_048E+B05007_045E+B05007_051E+B05007_042E;int4;people", "persons_4_years_old_and_younger;Number of people 4 years old and younger;B01001_003E+B01001_027E;integer;people", "age_of_5_and_19;Number of people with age of 5 to 20;(B01001_004E:B01001_007E)+(B01001_028E:B01001_031E);integer;people", "persons_between_the_age_of_20_and_64;Number of people between the age of 20 and 65;(B01001_008E:B01001_019E)+(B01001_032E:B01001_043E);integer;people", "persons_65_years_old_and_over;Number of people 65 years old and over;(B01001_020E:B01001_025E)+(B01001_044E:B01001_049E);integer;people", "born_in_haiti;Number of people born in Haiti;B05006_138E;integer;people", "born_in_venezuela;Number of people born in Venezuela;B05006_164E;integer;people"],
  "gdsc:collections": ["Census", "FSR"],
  "gdsc:functions": ["gdsc_get_attributes"],
  "gdsc:analyticConformsTo": "EPSG:2236",
  "gdsc:sponsor": ["IDSC;https://idsc.miami.edu", "Library;https://www.library.miami.edu"],
  "dcat:downloadURL": "https://api.census.gov/data/2021/acs/acs5/",
  "gdsc:tablename": "fl_2021_acs_5yr_tract_fsr",
  "dcat:qualifiedRelation": ["fl_2021_tl_tract"],
  "gdsc:up": "true",
  "gdsc:podID": "postgis-qzaqww9rhj3b31o1",
  "dct:modified": "2024-10-03 15:42:23",
  "dct:accrualPeriodicity": "Never",
  "spdx:checksum": "TBD",
  "dct:extent": ["2650627", "2.6M"],
  "dcat:bbox": "POLYGON((-87.634896 24.396308,-87.634896 31.000968,-79.974306 31.000968,-79.974306 24.396308,-87.634896 24.396308))"
}
